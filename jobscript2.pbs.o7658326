Running
pygame 2.2.0 (SDL 2.0.22, Python 3.11.0)
Hello from the pygame community. https://www.pygame.org/contribute.html
pygame 2.2.0 (SDL 2.0.22, Python 3.11.0)
Hello from the pygame community. https://www.pygame.org/contribute.html
tf.Tensor(
[[ 1.5678077  1.570834   1.5683563]
 [ 1.5434499  1.5448623  1.5467316]
 [ 1.5190237  1.5189929  1.521186 ]
 ...
 [-1.8128629 -1.8187698 -1.8091122]
 [-1.8432609 -1.8477626 -1.8449075]
 [-1.8861783 -1.8762151 -1.884478 ]], shape=(10057, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.0003485002>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00035122913>]
Good Loss
tf.Tensor(
[[ 1.6114866  1.5697243  1.5973855]
 [ 1.4164921  1.4202806  1.4131978]
 [ 1.2163502  1.2130365  1.2094783]
 ...
 [-1.4685402 -1.4488113 -1.4653587]
 [-1.5978847 -1.6014967 -1.6297048]
 [-1.707734  -1.6735363 -1.673324 ]], shape=(10054, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.0003471815>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034401342>]
Good Loss
tf.Tensor(
[[ 1.6280804  1.6365135  1.6283171]
 [ 1.4810491  1.4760009  1.4812838]
 [ 1.3303787  1.3398174  1.340981 ]
 ...
 [-1.0480918 -0.9701529 -1.0883594]
 [-1.2560953 -1.3186939 -1.333447 ]
 [-1.610929  -1.6627129 -1.5343696]], shape=(10045, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.0003573469>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003470414>]
Good Loss
tf.Tensor(
[[ 1.5957791  1.5999279  1.5914478]
 [ 1.5624483  1.5666133  1.563378 ]
 [ 1.5284191  1.5324535  1.5255343]
 ...
 [-1.7441764 -1.7541494 -1.7260678]
 [-1.7936983 -1.7872138 -1.8114648]
 [-1.8445871 -1.848698  -1.8574153]], shape=(10058, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00035451064>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003497083>]
Good Loss
tf.Tensor(
[[ 1.5520469  1.5532098  1.5504704]
 [ 1.5322373  1.5346117  1.5355101]
 [ 1.5100476  1.5118809  1.5113447]
 ...
 [-1.601923  -1.6285574 -1.5973425]
 [-1.685263  -1.6559391 -1.6931512]
 [-1.7648128 -1.7658703 -1.7480326]], shape=(10045, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00035255382>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034757602>]
Good Loss
tf.Tensor(
[[ 1.6022949  1.5964686  1.5961217]
 [ 1.566737   1.5692352  1.5674367]
 [ 1.5317049  1.534      1.529317 ]
 ...
 [-1.7461537 -1.74673   -1.7350744]
 [-1.797061  -1.7901464 -1.7891805]
 [-1.8366427 -1.8261342 -1.8256459]], shape=(10046, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00032909345>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00033737204>]
Good Loss
tf.Tensor(
[[ 1.5524031  1.553738   1.5545788]
 [ 1.5319589  1.5359702  1.5306847]
 [ 1.5117959  1.5078602  1.5106826]
 ...
 [-1.2475079 -1.2454524 -1.3342044]
 [-1.4432135 -1.3915409 -1.4161084]
 [-1.6738414 -1.739101  -1.6558557]], shape=(10066, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00035027423>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034701327>]
Good Loss
tf.Tensor(
[[ 1.6203412   1.6182587   1.6262248 ]
 [ 1.4556916   1.4441993   1.4490916 ]
 [ 1.2879623   1.2871321   1.2974175 ]
 ...
 [ 1.2041609   1.0355442   1.2586566 ]
 [ 0.040179    0.31633592 -0.07090396]
 [-1.24434    -1.3518801  -1.1877526 ]], shape=(10054, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.0003287277>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034300433>]
Good Loss
tf.Tensor(
[[ 1.5723233  1.5765013  1.5765845]
 [ 1.5478537  1.5484943  1.5454732]
 [ 1.5215956  1.5150265  1.5213845]
 ...
 [-1.1224695 -1.0355573 -1.0926182]
 [-1.3800462 -1.2987695 -1.3643333]
 [-1.6488028 -1.686891  -1.6199296]], shape=(10052, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00034942394>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00035562422>]
Good Loss
tf.Tensor(
[[ 1.5984507  1.599009   1.6038105]
 [ 1.5627662  1.561904   1.5559366]
 [ 1.5262476  1.5210783  1.5289578]
 ...
 [-1.7041775 -1.7053152 -1.7101027]
 [-1.7329435 -1.7263236 -1.7368354]
 [-1.7616231 -1.7742609 -1.7517687]], shape=(10046, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00035067173>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034155548>]
Good Loss
tf.Tensor(
[[ 1.6140074  1.6129223  1.6192806]
 [ 1.5705996  1.575116   1.5711073]
 [ 1.5226437  1.5228113  1.5244029]
 ...
 [-1.8112943 -1.8176618 -1.8039546]
 [-1.8406094 -1.8403379 -1.8317356]
 [-1.8788365 -1.8804661 -1.8794222]], shape=(10054, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00035355406>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00035332557>]
Good Loss
tf.Tensor(
[[ 1.6086838  1.6071786  1.6049418]
 [ 1.571689   1.5757815  1.5683409]
 [ 1.5313596  1.5269289  1.5191032]
 ...
 [-1.1746048 -1.102213  -1.166716 ]
 [-1.4265791 -1.485869  -1.3797971]
 [-1.6446981 -1.6097654 -1.6845171]], shape=(10057, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00034430012>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034478327>]
Good Loss
tf.Tensor(
[[ 1.6082895   1.6056862   1.6061916 ]
 [ 1.5697633   1.5687219   1.572602  ]
 [ 1.5318716   1.5337695   1.5307958 ]
 ...
 [-0.08641763 -0.00645338 -0.40958166]
 [-0.70356977 -0.60711277 -0.5473115 ]
 [-1.385761   -1.4693695  -1.3469738 ]], shape=(10041, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.000356253>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003425643>]
Good Loss
tf.Tensor(
[[ 1.480842   1.4828638  1.4775734]
 [ 1.4703991  1.4694893  1.4697405]
 [ 1.4571246  1.460309   1.4595879]
 ...
 [-1.7476873 -1.7465101 -1.7485809]
 [-1.7890029 -1.7927549 -1.7885109]
 [-1.8445257 -1.8357619 -1.847295 ]], shape=(10059, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.0003421227>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034447014>]
Good Loss
tf.Tensor(
[[ 1.6052121  1.6039845  1.6067874]
 [ 1.5681003  1.5734085  1.5710669]
 [ 1.5268521  1.5240847  1.530513 ]
 ...
 [-1.818124  -1.8179047 -1.8148286]
 [-1.8508877 -1.8504009 -1.8483999]
 [-1.8960359 -1.9094858 -1.8860842]], shape=(10059, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00034924631>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003579689>]
Good Loss
tf.Tensor(
[[ 1.6070898  1.6057878  1.6052746]
 [ 1.5666883  1.565434   1.5639368]
 [ 1.5256712  1.530701   1.5310845]
 ...
 [-1.7443788 -1.7335505 -1.7407813]
 [-1.8032577 -1.7988325 -1.793642 ]
 [-1.8354324 -1.8308219 -1.8425273]], shape=(10053, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.0003403625>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034529358>]
Good Loss
tf.Tensor(
[[ 1.6102341  1.6165823  1.5987519]
 [ 1.5678532  1.5742009  1.5550812]
 [ 1.5250843  1.522117   1.530329 ]
 ...
 [-1.8924705 -1.8919048 -1.8980334]
 [-1.931771  -1.9334097 -1.9288404]
 [-1.9551717 -1.958209  -1.9719814]], shape=(10053, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.000351065>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034337994>]
Good Loss
tf.Tensor(
[[ 1.6014556  1.5963248  1.6045618]
 [ 1.564338   1.5648137  1.5622692]
 [ 1.5291449  1.5250344  1.5248951]
 ...
 [-1.6785352 -1.6719719 -1.6723709]
 [-1.7225702 -1.7156543 -1.7333366]
 [-1.7781377 -1.7715722 -1.7697196]], shape=(10057, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00034769895>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00033793636>]
Good Loss
tf.Tensor(
[[ 1.603338   1.6030569  1.5955268]
 [ 1.5628737  1.5604857  1.5611186]
 [ 1.5193167  1.5199629  1.5167035]
 ...
 [-1.8430642 -1.8542949 -1.8415742]
 [-1.8788083 -1.8704889 -1.8737757]
 [-1.9274225 -1.9289112 -1.9383583]], shape=(10049, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00034321516>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034860303>]
Good Loss
tf.Tensor(
[[ 1.4592614  1.459994   1.4579889]
 [ 1.4507385  1.4488097  1.4479653]
 [ 1.4384894  1.4386027  1.4382464]
 ...
 [-1.7959697 -1.7826914 -1.7878304]
 [-1.8405504 -1.8320036 -1.8459573]
 [-1.8839016 -1.8893801 -1.8814456]], shape=(10061, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.0003476627>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003475246>]
Good Loss
tf.Tensor(
[[ 1.6041824  1.6022397  1.6031656]
 [ 1.5677058  1.5681851  1.5622877]
 [ 1.5269191  1.534111   1.5279768]
 ...
 [-1.7678736 -1.7805462 -1.7539321]
 [-1.8211972 -1.8138787 -1.8240474]
 [-1.8740543 -1.8546696 -1.8750768]], shape=(10063, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00033169164>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003499856>]
Good Loss
tf.Tensor(
[[ 1.5866607  1.5910064  1.5890204]
 [ 1.553978   1.5501597  1.5501212]
 [ 1.5208362  1.5194843  1.5185549]
 ...
 [-1.7724221 -1.7712754 -1.770985 ]
 [-1.8152065 -1.8133808 -1.8100345]
 [-1.8779043 -1.8671707 -1.8850459]], shape=(10062, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.0003349159>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00035227663>]
Good Loss
tf.Tensor(
[[ 1.5919696  1.597629   1.5779467]
 [ 1.4103518  1.4291968  1.421843 ]
 [ 1.2245277  1.1971196  1.2019594]
 ...
 [-1.7343152 -1.7498409 -1.7301483]
 [-1.7809917 -1.7847707 -1.7726471]
 [-1.8506355 -1.8487383 -1.8424212]], shape=(10061, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00034447707>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034777645>]
Good Loss
tf.Tensor(
[[ 1.5738219  1.578393   1.5711614]
 [ 1.5462285  1.548549   1.5522566]
 [ 1.5168782  1.5137732  1.5099877]
 ...
 [-1.7982823 -1.7975271 -1.7874382]
 [-1.8369023 -1.8274957 -1.8431453]
 [-1.8782481 -1.8858786 -1.8766733]], shape=(10059, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00035177235>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003508868>]
Good Loss
tf.Tensor(
[[ 1.6069223  1.6048244  1.6065277]
 [ 1.5714866  1.5762465  1.5680155]
 [ 1.5351478  1.5283533  1.5365325]
 ...
 [-1.5410389 -1.5462308 -1.5561668]
 [-1.6295025 -1.6403108 -1.6240447]
 [-1.7247922 -1.711106  -1.7278085]], shape=(10052, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00034705386>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003486431>]
Good Loss
tf.Tensor(
[[ 1.5864452  1.5862137  1.5836623]
 [ 1.5571768  1.5476856  1.558574 ]
 [ 1.5228847  1.5262285  1.5253762]
 ...
 [-1.3383944 -1.3613461 -1.298992 ]
 [-1.5373081 -1.4849886 -1.4998931]
 [-1.6640221 -1.6484895 -1.7123595]], shape=(10062, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00035480893>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034537408>]
Good Loss
tf.Tensor(
[[ 1.6050723  1.617455   1.603866 ]
 [ 1.5322661  1.5360365  1.5399706]
 [ 1.4534783  1.4660761  1.4612138]
 ...
 [-1.7378043 -1.7511866 -1.7267882]
 [-1.6978858 -1.6989341 -1.7012458]
 [-1.7453951 -1.7653925 -1.7397547]], shape=(10063, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00036472816>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034041147>]
Good Loss
tf.Tensor(
[[ 1.5940902  1.5856137  1.5926937]
 [ 1.5625198  1.562283   1.5664417]
 [ 1.524556   1.5243232  1.5136943]
 ...
 [-1.483367  -1.5347499 -1.4850613]
 [-1.6173682 -1.6167402 -1.6248665]
 [-1.7063385 -1.678161  -1.720689 ]], shape=(10055, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.0003499203>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00033948146>]
Good Loss
tf.Tensor(
[[ 1.5938283  1.5954595  1.5941911]
 [ 1.5091867  1.5174415  1.493605 ]
 [ 1.4060681  1.3833362  1.4166598]
 ...
 [-1.6337223 -1.6188895 -1.6513997]
 [-1.7148494 -1.7469978 -1.7086186]
 [-1.7951277 -1.8049805 -1.7914807]], shape=(10059, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00037094523>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003443279>]
Good Loss
tf.Tensor(
[[ 1.5421932  1.5394217  1.5404115]
 [ 1.524985   1.5240209  1.5258346]
 [ 1.5050533  1.5018142  1.5005103]
 ...
 [-1.7919563 -1.7919319 -1.7984192]
 [-1.8322233 -1.8396598 -1.8588413]
 [-1.9044789 -1.8948256 -1.909135 ]], shape=(10056, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00033018005>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034537492>]
Good Loss
tf.Tensor(
[[ 1.6241363  1.6299256  1.6289593]
 [ 1.5681047  1.555729   1.5713624]
 [ 1.5049202  1.5022628  1.4941533]
 ...
 [-1.6234219 -1.6049565 -1.6087135]
 [-1.6969056 -1.685379  -1.6723841]
 [-1.7891408 -1.7599894 -1.8007946]], shape=(10059, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00034745934>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034603462>]
Good Loss
tf.Tensor(
[[ 1.4718922  1.4695464  1.4709948]
 [ 1.4619402  1.4647801  1.4641565]
 [ 1.4495219  1.4510956  1.4468881]
 ...
 [-1.3861836 -1.3394847 -1.3884555]
 [-1.5088992 -1.6105416 -1.4479113]
 [-1.6693859 -1.7400427 -1.717369 ]], shape=(10060, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00033326747>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034410344>]
Good Loss
tf.Tensor(
[[ 1.5801461   1.5735689   1.5800197 ]
 [ 1.5566503   1.5539907   1.5622778 ]
 [ 1.5293154   1.5323523   1.5349003 ]
 ...
 [ 1.1426018   1.3386464   1.2489951 ]
 [ 0.15039557 -0.27433026 -0.05003386]
 [-1.2929974  -1.0643162  -1.1989613 ]], shape=(10042, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00032227367>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00033577904>]
Good Loss
tf.Tensor(
[[ 1.6056881  1.6020745  1.6110162]
 [ 1.5535895  1.5607445  1.5486228]
 [ 1.499175   1.5048823  1.5060701]
 ...
 [-1.628638  -1.6176945 -1.6445982]
 [-1.6697592 -1.6592966 -1.6645361]
 [-1.7836939 -1.7642797 -1.7893118]], shape=(10046, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00032664978>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00035227273>]
Good Loss
tf.Tensor(
[[ 1.6178535  1.6210291  1.6246291]
 [ 1.5686486  1.5683352  1.5754257]
 [ 1.5175074  1.5175482  1.5187227]
 ...
 [-1.2858666 -1.3181102 -1.2524884]
 [-1.4287286 -1.4247375 -1.440927 ]
 [-1.8797264 -1.8550538 -1.9027569]], shape=(10049, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.0003440694>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003391879>]
Good Loss
tf.Tensor(
[[ 1.6193316  1.624842   1.6223682]
 [ 1.5878698  1.5781773  1.5892676]
 [ 1.5454613  1.5510077  1.5517968]
 ...
 [-1.2084833 -1.2051169 -1.1410172]
 [-1.5212    -1.4599367 -1.4580344]
 [-1.7483329 -1.7988989 -1.8147031]], shape=(10059, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00032247909>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034070024>]
Good Loss
tf.Tensor(
[[ 1.5577832  1.5581387  1.5608002]
 [ 1.5316694  1.5354838  1.534036 ]
 [ 1.5030264  1.5057797  1.5078094]
 ...
 [-1.8040708 -1.8036306 -1.8147112]
 [-1.8601989 -1.8461183 -1.8464379]
 [-1.9102014 -1.9003574 -1.9017576]], shape=(10051, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.0003480005>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034535312>]
Good Loss
tf.Tensor(
[[ 1.5486912  1.5524915  1.5518844]
 [ 1.5347291  1.5332499  1.538266 ]
 [ 1.517364   1.5189155  1.5196658]
 ...
 [-1.7341496 -1.7223041 -1.7171348]
 [-1.7727969 -1.7795914 -1.7608303]
 [-1.8194156 -1.8297952 -1.8172214]], shape=(10065, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00030788154>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034694004>]
Good Loss
tf.Tensor(
[[ 1.521629   1.5202891  1.5167747]
 [ 1.5128096  1.5155214  1.5157505]
 [ 1.49692    1.495002   1.4980094]
 ...
 [-1.6879132 -1.6793146 -1.6886294]
 [-1.7522482 -1.7726445 -1.7498602]
 [-1.8229636 -1.8047804 -1.8171208]], shape=(10053, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00037307627>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00035093928>]
Good Loss
tf.Tensor(
[[ 1.6111084  1.6116596  1.6050224]
 [ 1.5379449  1.5458444  1.5394679]
 [ 1.4484296  1.437986   1.4522378]
 ...
 [-1.8047152 -1.8051825 -1.794862 ]
 [-1.855345  -1.8417193 -1.8580747]
 [-1.9014497 -1.8972281 -1.9066551]], shape=(10055, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00034039372>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003432081>]
Good Loss
tf.Tensor(
[[ 1.4951757  1.4922284  1.497084 ]
 [ 1.4850756  1.4824201  1.4849533]
 [ 1.4786574  1.481849   1.4815938]
 ...
 [-1.6880548 -1.7097496 -1.6785634]
 [-1.7188148 -1.708514  -1.7062724]
 [-1.8009573 -1.8093303 -1.8096559]], shape=(10055, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00032825046>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00035414222>]
Good Loss
tf.Tensor(
[[ 1.5631099  1.5664835  1.5660808]
 [ 1.5445752  1.5479513  1.5449722]
 [ 1.528991   1.5276854  1.5245914]
 ...
 [-1.2097744 -1.1904343 -1.1514632]
 [-1.4635218 -1.404564  -1.4087952]
 [-1.6786203 -1.671139  -1.7142708]], shape=(10056, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00037643497>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034385113>]
Good Loss
tf.Tensor(
[[ 1.628862   1.63528    1.6218276]
 [ 1.534989   1.5046029  1.5163133]
 [ 1.437527   1.430748   1.43337  ]
 ...
 [-1.8191754 -1.8071445 -1.8151888]
 [-1.8460665 -1.8409065 -1.8644706]
 [-1.9087992 -1.9183731 -1.8999559]], shape=(10055, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.0003478>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034523048>]
Good Loss
tf.Tensor(
[[ 1.4396939  1.4378705  1.4424738]
 [ 1.4350148  1.4356105  1.4303856]
 [ 1.4224504  1.4239882  1.4199386]
 ...
 [-1.768207  -1.7575933 -1.7726396]
 [-1.835081  -1.8244282 -1.8359119]
 [-1.8854808 -1.8942312 -1.8758587]], shape=(10050, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00035636534>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003396334>]
Good Loss
tf.Tensor(
[[ 1.6233245  1.6110221  1.6390698]
 [ 1.5152231  1.4957007  1.5075926]
 [ 1.3723449  1.3415991  1.388439 ]
 ...
 [-1.7055031 -1.6900957 -1.7067072]
 [-1.749788  -1.7763876 -1.7331837]
 [-1.8062503 -1.8208538 -1.7916154]], shape=(10057, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00035912578>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034530732>]
Good Loss
tf.Tensor(
[[ 1.5954155  1.5915203  1.596135 ]
 [ 1.560144   1.5638275  1.5609142]
 [ 1.5166715  1.5158969  1.5091424]
 ...
 [-1.5422237 -1.5326681 -1.5644317]
 [-1.5543789 -1.5559016 -1.5822859]
 [-1.6243243 -1.616992  -1.596145 ]], shape=(10060, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00036326665>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034684906>]
Good Loss
tf.Tensor(
[[ 1.6181948  1.631057   1.6101248]
 [ 1.5379342  1.5508374  1.5471889]
 [ 1.4366869  1.434982   1.4423615]
 ...
 [-1.4494352 -1.4382366 -1.4421432]
 [-1.4908798 -1.47815   -1.5027333]
 [-1.5861957 -1.5875769 -1.577865 ]], shape=(10055, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00030501065>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003367715>]
Good Loss
tf.Tensor(
[[ 1.5610138   1.5617537   1.5639169 ]
 [ 1.5394328   1.5411202   1.5442854 ]
 [ 1.5211786   1.5166794   1.515719  ]
 ...
 [-0.74253577 -0.70816165 -0.7384152 ]
 [-0.99652654 -1.0439978  -1.1180446 ]
 [-1.5005825  -1.4910107  -1.5494231 ]], shape=(10067, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00035881347>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034269787>]
Good Loss
tf.Tensor(
[[ 1.5985707  1.5998703  1.5936756]
 [ 1.5703855  1.5689753  1.5728447]
 [ 1.5249636  1.52834    1.5302424]
 ...
 [-1.9470137 -1.9440871 -1.9442891]
 [-2.0168135 -2.0240211 -2.0189767]
 [-1.9861605 -1.9924628 -1.9923569]], shape=(10055, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00035433288>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003542315>]
Good Loss
tf.Tensor(
[[ 1.5536339   1.5575111   1.5544024 ]
 [ 1.5353264   1.5365871   1.5367672 ]
 [ 1.5074904   1.505727    1.508477  ]
 ...
 [-0.5032659  -0.38603902 -0.665039  ]
 [-1.0631462  -1.2378609  -1.0471271 ]
 [-1.5553677  -1.4819392  -1.4647269 ]], shape=(10053, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.0003832475>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034064343>]
Good Loss
tf.Tensor(
[[ 1.4714643  1.4672114  1.4744798]
 [ 1.4628621  1.4602227  1.4611062]
 [ 1.4535091  1.4505194  1.4565289]
 ...
 [-1.7486843 -1.7541945 -1.7548718]
 [-1.7556815 -1.7578139 -1.7539676]
 [-1.7657701 -1.7590348 -1.7855619]], shape=(10045, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.0003437629>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034480114>]
Good Loss
tf.Tensor(
[[ 1.5404547  1.5388745  1.5315547]
 [ 1.5175271  1.5218581  1.5140495]
 [ 1.491478   1.4937195  1.4882269]
 ...
 [-1.6764737 -1.6759654 -1.6826222]
 [-1.7522404 -1.7443584 -1.7575835]
 [-1.7386497 -1.73588   -1.7321625]], shape=(10057, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00033098855>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034106747>]
Good Loss
tf.Tensor(
[[ 1.6484491  1.6448522  1.6532147]
 [ 1.6216121  1.627445   1.6246052]
 [ 1.5832808  1.5891203  1.5813589]
 ...
 [-1.8289554 -1.8269664 -1.8254325]
 [ 1.         1.         1.       ]
 [-1.        -1.        -1.       ]], shape=(10061, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00034183264>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003423643>]
Good Loss
tf.Tensor(
[[ 1.5495216   1.5434173   1.5562923 ]
 [ 1.5081146   1.5116317   1.5125736 ]
 [ 1.4456769   1.4470092   1.4525113 ]
 ...
 [ 0.37014237  0.37548772  0.751702  ]
 [-0.85173756 -1.0022788  -0.72383076]
 [-1.8167928  -1.7278379  -1.8993098 ]], shape=(10051, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00033831954>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034100047>]
Good Loss
tf.Tensor(
[[ 1.613657    1.6142482   1.6133512 ]
 [ 1.5839396   1.5829186   1.58183   ]
 [ 1.5246612   1.5219284   1.5316355 ]
 ...
 [-0.9500559  -0.83064365 -0.9201862 ]
 [-1.2897763  -1.333593   -1.3781425 ]
 [-1.631204   -1.6186895  -1.6065736 ]], shape=(10056, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.0003869557>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003496471>]
Good Loss
tf.Tensor(
[[ 1.4661797   1.4660331   1.4654926 ]
 [ 1.4620671   1.4645219   1.4605225 ]
 [ 1.4490966   1.4508454   1.4458883 ]
 ...
 [ 0.84791887  0.17055987  0.39156944]
 [ 0.556232    1.1305251   0.9810777 ]
 [-1.4041508  -1.301085   -1.372647  ]], shape=(10046, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00036273274>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.000353659>]
Good Loss
tf.Tensor(
[[ 1.5620675  1.5804943  1.5673743]
 [ 1.4568079  1.4402406  1.4330971]
 [ 1.284602   1.294177   1.2822641]
 ...
 [-1.5785599 -1.5365356 -1.5123986]
 [-1.7832717 -1.7713839 -1.8203793]
 [-1.8634099 -1.9042449 -1.8638407]], shape=(10043, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00034555286>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034851395>]
Good Loss
tf.Tensor(
[[ 1.5797027  1.5754185  1.5762439]
 [ 1.54798    1.550861   1.5524937]
 [ 1.5079256  1.5138322  1.5099922]
 ...
 [-1.3118489 -1.3197589 -1.2732608]
 [-1.670988  -1.6602389 -1.6535962]
 [-1.8318762 -1.807892  -1.8092359]], shape=(10054, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.0003385576>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034503933>]
Good Loss
tf.Tensor(
[[ 1.4838558  1.4794248  1.4756145]
 [ 1.3762734  1.3607124  1.3834211]
 [ 1.2766734  1.260283   1.2610115]
 ...
 [-1.4529629 -1.466129  -1.4831495]
 [-1.5142916 -1.4793379 -1.5003452]
 [-1.5822988 -1.5729804 -1.5766169]], shape=(10067, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00039363507>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034249274>]
Good Loss
tf.Tensor(
[[ 1.5264231  1.5219079  1.5235125]
 [ 1.5169009  1.5193629  1.5132002]
 [ 1.4922081  1.4911137  1.4946128]
 ...
 [-1.3462284 -1.4228505 -1.3784384]
 [-1.7212819 -1.6921407 -1.7417942]
 [-1.8755846 -1.9503928 -1.8349413]], shape=(10041, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.000301406>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00033997488>]
Good Loss
pygame 2.2.0 (SDL 2.0.22, Python 3.11.0)
Hello from the pygame community. https://www.pygame.org/contribute.html
pygame 2.2.0 (SDL 2.0.22, Python 3.11.0)
Hello from the pygame community. https://www.pygame.org/contribute.html
pygame 2.2.0 (SDL 2.0.22, Python 3.11.0)
Hello from the pygame community. https://www.pygame.org/contribute.html
pygame 2.2.0 (SDL 2.0.22, Python 3.11.0)
Hello from the pygame community. https://www.pygame.org/contribute.html
pygame 2.2.0 (SDL 2.0.22, Python 3.11.0)
Hello from the pygame community. https://www.pygame.org/contribute.html
pygame 2.2.0 (SDL 2.0.22, Python 3.11.0)
Hello from the pygame community. https://www.pygame.org/contribute.html
pygame 2.2.0 (SDL 2.0.22, Python 3.11.0)
Hello from the pygame community. https://www.pygame.org/contribute.html
1
pygame 2.2.0 (SDL 2.0.22, Python 3.11.0)
Hello from the pygame community. https://www.pygame.org/contribute.html
pygame 2.2.0 (SDL 2.0.22, Python 3.11.0)
Hello from the pygame community. https://www.pygame.org/contribute.html
tf.Tensor(
[[ 1.6107564  1.6214561  1.5998877]
 [ 1.5750748  1.5759137  1.5817025]
 [ 1.5104821  1.5210156  1.5172019]
 ...
 [-1.2802116 -1.2459228 -1.2602642]
 [-1.3961564 -1.3596711 -1.3866718]
 [-1.6341596 -1.6188277 -1.6757665]], shape=(10051, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00035573269>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00035260947>]
Good Loss
tf.Tensor(
[[ 1.4849255   1.4766171   1.4838688 ]
 [ 1.4800471   1.4833515   1.4770716 ]
 [ 1.4634055   1.4668688   1.4639106 ]
 ...
 [ 0.24137744  0.43800917  0.00821016]
 [-0.7554927  -0.60153514 -0.61937654]
 [-1.5182706  -1.6591508  -1.5258176 ]], shape=(10057, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00034893028>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034393073>]
Good Loss
tf.Tensor(
[[ 1.6289214  1.63141    1.617447 ]
 [ 1.5958573  1.6012993  1.60454  ]
 [ 1.5523314  1.5528328  1.540406 ]
 ...
 [-1.6378021 -1.6363311 -1.6222262]
 [-1.6256166 -1.6207266 -1.6196324]
 [-1.8251925 -1.826251  -1.8070569]], shape=(10051, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00034492393>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034413591>]
Good Loss
tf.Tensor(
[[ 1.5554123  1.5566746  1.5582029]
 [ 1.5456038  1.5447619  1.5498797]
 [ 1.5227628  1.5234985  1.5216998]
 ...
 [-0.9913498 -1.0176476 -1.14085  ]
 [-1.3892359 -1.5172002 -1.3303461]
 [-1.8388981 -1.7539617 -1.7865882]], shape=(10057, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00036929443>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034892335>]
Good Loss
tf.Tensor(
[[ 1.5405341  1.5425714  1.5414593]
 [ 1.5322586  1.5304269  1.5256037]
 [ 1.507949   1.5053095  1.50254  ]
 ...
 [-1.9647112 -1.9658148 -1.9650575]
 [-1.9561096 -1.9499569 -1.9559959]
 [-1.9966697 -1.9906164 -1.9836566]], shape=(10042, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00027539593>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003472118>]
Good Loss
tf.Tensor(
[[ 1.5562563  1.5542195  1.5621715]
 [ 1.5406082  1.538537   1.538898 ]
 [ 1.5246438  1.529157   1.5223581]
 ...
 [-1.8189145 -1.8103858 -1.8056786]
 [-1.8823836 -1.8783958 -1.9054712]
 [-1.9297742 -1.919116  -1.9411016]], shape=(10045, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00035379847>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034716216>]
Good Loss
tf.Tensor(
[[ 1.6093702  1.6164492  1.5816045]
 [ 1.5403217  1.5364825  1.5269833]
 [ 1.4480344  1.4349159  1.4578859]
 ...
 [-1.6132635 -1.6031183 -1.6531049]
 [-1.7292354 -1.7125101 -1.6906807]
 [-1.802274  -1.8101606 -1.7637314]], shape=(10055, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00041197523>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034900248>]
Good Loss
tf.Tensor(
[[ 1.3659142  1.3673557  1.3654089]
 [ 1.3686706  1.3682219  1.3661647]
 [ 1.3700782  1.3685014  1.3703282]
 ...
 [-1.6546739 -1.655883  -1.6894524]
 [-1.6972795 -1.6903354 -1.6908065]
 [-1.6956586 -1.6768647 -1.7137835]], shape=(10057, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00030846472>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00035224104>]
Good Loss
tf.Tensor(
[[ 1.5673817  1.5534904  1.5532638]
 [ 1.4923193  1.4997352  1.4939284]
 [ 1.4222717  1.4212472  1.425029 ]
 ...
 [-1.7369694 -1.7396683 -1.7215539]
 [-1.8094558 -1.7899957 -1.8164331]
 [-1.9154781 -1.9060361 -1.8840315]], shape=(10049, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.0003614042>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00035257402>]
Good Loss
tf.Tensor(
[[ 1.5103518  1.5051597  1.5154617]
 [ 1.5055343  1.5103564  1.5077784]
 [ 1.4977677  1.5025858  1.5028751]
 ...
 [-1.650467  -1.6679863 -1.6373094]
 [-1.717126  -1.7488554 -1.7039711]
 [-1.8483672 -1.8516711 -1.8623334]], shape=(10064, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00035842846>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034628675>]
Good Loss
tf.Tensor(
[[ 1.5022448  1.502987   1.4956378]
 [ 1.4791495  1.4738581  1.4841437]
 [ 1.4234067  1.423307   1.4223603]
 ...
 [-1.6220988 -1.6239947 -1.6298256]
 [-1.816014  -1.8172058 -1.8168366]
 [-1.8762472 -1.8683482 -1.9005167]], shape=(10061, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00036797003>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003479816>]
Good Loss
tf.Tensor(
[[ 1.6676575  1.6483637  1.6715273]
 [ 1.592189   1.6055974  1.5916431]
 [ 1.4845937  1.4915541  1.4684625]
 ...
 [-1.7866054 -1.7802474 -1.76962  ]
 [-1.8379031 -1.8334229 -1.8671688]
 [-1.9352813 -1.9424098 -1.9404706]], shape=(10058, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00030433096>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034697863>]
Good Loss
tf.Tensor(
[[ 1.3507469  1.3651183  1.3388699]
 [ 1.231632   1.1987746  1.2256004]
 [ 1.1793045  1.2113286  1.1931038]
 ...
 [-2.208405  -2.2054954 -2.1997366]
 [-2.234942  -2.2377887 -2.2238934]
 [-2.2535372 -2.2575264 -2.242522 ]], shape=(10052, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.000359863>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034205013>]
Good Loss
tf.Tensor(
[[ 1.561526   1.5616484  1.5611616]
 [ 1.5497134  1.5518955  1.5486882]
 [ 1.5258193  1.5304459  1.5277364]
 ...
 [-1.7260141 -1.7302576 -1.7356064]
 [-1.        -1.        -1.       ]
 [ 1.         1.         1.       ]], shape=(10057, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00030892884>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00035226298>]
Good Loss
tf.Tensor(
[[ 1.5220453  1.5195659  1.5256231]
 [ 1.5125378  1.5171247  1.5119933]
 [ 1.489169   1.494117   1.4919541]
 ...
 [-1.6307819 -1.6144152 -1.6016858]
 [-1.6369925 -1.5992254 -1.6017352]
 [-1.8247983 -1.849843  -1.8086954]], shape=(10059, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.0003532777>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003477347>]
Good Loss
tf.Tensor(
[[ 1.598337   1.5976926  1.6032526]
 [ 1.5911374  1.5971129  1.593238 ]
 [ 1.5573314  1.54997    1.5622605]
 ...
 [-2.0040464 -2.0085278 -2.0081382]
 [-2.0034397 -1.9978759 -2.0146022]
 [-1.9931725 -1.982142  -1.9936506]], shape=(10039, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00028272002>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034605965>]
Good Loss
tf.Tensor(
[[ 1.6006243  1.6066349  1.601827 ]
 [ 1.589368   1.5852195  1.5942372]
 [ 1.5626014  1.5646683  1.5674865]
 ...
 [-1.5568839 -1.539923  -1.5879418]
 [-1.612809  -1.6055954 -1.6121897]
 [-1.6587052 -1.6560292 -1.6553935]], shape=(10071, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00031713306>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034969812>]
Good Loss
tf.Tensor(
[[ 1.4912302  1.4891423  1.4952532]
 [ 1.4871871  1.484684   1.4901102]
 [ 1.4769964  1.4726341  1.4740702]
 ...
 [-2.0616767 -2.0562925 -2.06194  ]
 [-1.916689  -1.9090102 -1.9119583]
 [-1.8516369 -1.8438245 -1.8441595]], shape=(10046, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.0002942998>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034841974>]
Good Loss
tf.Tensor(
[[ 1.457822   1.4609302  1.4552534]
 [ 1.4601358  1.4602424  1.4598516]
 [ 1.4578921  1.457393   1.4551593]
 ...
 [-1.9747623 -1.9756283 -1.9658707]
 [-1.9682106 -1.956307  -1.9632707]
 [-2.0413036 -2.034834  -2.0541546]], shape=(10055, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00034522882>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034228296>]
Good Loss
tf.Tensor(
[[ 1.627366   1.612885   1.6273392]
 [ 1.554041   1.5776061  1.5463189]
 [ 1.3816043  1.4044851  1.387432 ]
 ...
 [-1.2085785 -1.2374747 -1.2347716]
 [-1.4659235 -1.4421293 -1.4840547]
 [-1.6876088 -1.6252166 -1.637662 ]], shape=(10053, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00030280996>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00035731753>]
Good Loss
tf.Tensor(
[[ 1.4757605   1.47246     1.4780285 ]
 [ 1.4776316   1.4758017   1.4730577 ]
 [ 1.4609556   1.4599972   1.4644443 ]
 ...
 [ 0.26031896  0.6243673   0.01425578]
 [-0.6508147  -0.66639614 -0.804016  ]
 [-1.568101   -1.570762   -1.312585  ]], shape=(10048, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.0002907461>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034415806>]
Good Loss
tf.Tensor(
[[ 1.6349689  1.6413795  1.6278102]
 [ 1.5978737  1.6048483  1.6083854]
 [ 1.5005677  1.5137671  1.5038296]
 ...
 [-1.8510646 -1.6956096 -1.9577421]
 [-1.4661611 -1.281704  -1.2892343]
 [-2.1096256 -2.1712105 -2.12605  ]], shape=(10052, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00029000413>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034785003>]
Good Loss
tf.Tensor(
[[ 1.3588773  1.3558304  1.3587198]
 [ 1.3631124  1.3643675  1.3607849]
 [ 1.3561758  1.3586012  1.3538078]
 ...
 [-1.2747327 -1.2720823 -1.2769532]
 [-1.210919  -1.1993208 -1.2156451]
 [-1.2559353 -1.2706435 -1.2504956]], shape=(10057, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.000363942>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003343556>]
Good Loss
tf.Tensor(
[[ 1.5023856  1.48195    1.4929473]
 [ 1.4531581  1.463386   1.4617374]
 [ 1.346923   1.3542352  1.342562 ]
 ...
 [-1.9064119 -1.9100741 -1.8831971]
 [-2.119815  -2.1234403 -2.1060534]
 [-2.1551366 -2.1827624 -2.1643317]], shape=(10046, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00028477187>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.000343215>]
Good Loss
tf.Tensor(
[[ 1.5725976  1.5506507  1.5813998]
 [ 1.5455991  1.556116   1.5438211]
 [ 1.4556693  1.4531053  1.4641165]
 ...
 [-1.3584226 -1.3286617 -1.3382165]
 [-1.5275073 -1.4846115 -1.4960978]
 [-1.709356  -1.7373137 -1.7838216]], shape=(10061, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00025792734>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003432595>]
Good Loss
tf.Tensor(
[[ 1.5903176  1.5987962  1.5948434]
 [ 1.5698423  1.5559161  1.5736073]
 [ 1.4908357  1.4895048  1.4915197]
 ...
 [-1.8186256 -1.8102143 -1.8297141]
 [-1.7918301 -1.8024248 -1.8124416]
 [-1.8369677 -1.829234  -1.8255483]], shape=(10052, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.0003312903>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034201617>]
Good Loss
tf.Tensor(
[[ 1.5694007  1.5765151  1.56374  ]
 [ 1.5692823  1.5669473  1.5612651]
 [ 1.5350231  1.5421091  1.5389392]
 ...
 [-1.5368942 -1.5171541 -1.5536022]
 [-1.5203674 -1.4984297 -1.5118648]
 [-1.7002606 -1.6788899 -1.6920451]], shape=(10061, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.0003480158>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034749517>]
Good Loss
tf.Tensor(
[[ 1.4260852  1.425221   1.4286326]
 [ 1.4352287  1.4326701  1.4350387]
 [ 1.4390239  1.4395955  1.4379661]
 ...
 [-1.8769786 -1.823769  -1.8678054]
 [-1.9556223 -2.001201  -1.8820809]
 [-2.1951623 -2.148603  -2.2969356]], shape=(10061, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00034998867>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034787902>]
Good Loss
tf.Tensor(
[[ 1.5978363  1.6019924  1.5917455]
 [ 1.592166   1.5976212  1.5850961]
 [ 1.5757792  1.5812445  1.5739883]
 ...
 [-1.3954248 -1.4082562 -1.4115007]
 [-1.2680825 -1.1894486 -1.1832384]
 [-2.0952117 -2.1296978 -2.1108422]], shape=(10047, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00039027707>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034522064>]
Good Loss
tf.Tensor(
[[ 1.4934307  1.4953331  1.4859517]
 [ 1.4988841  1.4994628  1.4934837]
 [ 1.483199   1.4865618  1.4797237]
 ...
 [-1.210437  -1.3039987 -1.24845  ]
 [-1.4637575 -1.3884603 -1.4024941]
 [-1.6756899 -1.6598899 -1.6661721]], shape=(10061, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00028934042>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034405643>]
Good Loss
tf.Tensor(
[[ 1.4486372   1.4520485   1.4514304 ]
 [ 1.4236085   1.4274299   1.4254377 ]
 [ 1.3490922   1.3517883   1.3456773 ]
 ...
 [ 0.36520392  0.1971476   0.62534744]
 [-0.80531704 -0.60879    -0.80951625]
 [-2.0213099  -2.075196   -1.9047997 ]], shape=(10049, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00028322556>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003458718>]
Good Loss
tf.Tensor(
[[ 1.5833783  1.5891042  1.5890827]
 [ 1.576713   1.575737   1.5824203]
 [ 1.5315386  1.5236052  1.5372666]
 ...
 [-1.1844548 -1.0583224 -1.1719575]
 [-1.8074119 -1.8768315 -1.8699315]
 [-1.5745585 -1.5854506 -1.6666878]], shape=(10046, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.0004039285>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00035228548>]
Good Loss
tf.Tensor(
[[ 1.4586896  1.4569665  1.4695615]
 [ 1.4245498  1.423017   1.4312387]
 [ 1.2993659  1.2975241  1.2974379]
 ...
 [-1.8383644 -1.8580525 -1.8334982]
 [-1.8477827 -1.8175845 -1.8640896]
 [-1.8450047 -1.8148129 -1.8305712]], shape=(10051, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00040653022>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00033700606>]
Good Loss
tf.Tensor(
[[ 1.4283233  1.4335315  1.4298561]
 [ 1.4281285  1.424812   1.4270214]
 [ 1.4151561  1.4110428  1.4187648]
 ...
 [-1.4278785 -1.4437356 -1.4522643]
 [-1.4972825 -1.4791362 -1.4805454]
 [-1.5653595 -1.555212  -1.5677001]], shape=(10046, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00036207816>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003457382>]
Good Loss
tf.Tensor(
[[ 1.555832   1.5627018  1.5562903]
 [ 1.5551664  1.5427214  1.5494837]
 [ 1.5088876  1.5153486  1.5035166]
 ...
 [-1.2293797 -1.3057588 -1.1859154]
 [-1.2613326 -1.3648968 -1.271133 ]
 [-1.5403771 -1.5472038 -1.4947358]], shape=(10060, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.000379087>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003507656>]
Good Loss
tf.Tensor(
[[ 1.5128644  1.5085564  1.519933 ]
 [ 1.5059998  1.5180385  1.5130775]
 [ 1.4182801  1.410078   1.4021921]
 ...
 [-1.7747602 -1.7809695 -1.8169762]
 [-1.9520432 -1.9700503 -1.9241121]
 [-2.1671264 -2.1188912 -2.1808085]], shape=(10060, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.0003887213>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003375893>]
Good Loss
tf.Tensor(
[[ 1.4747063  1.4853474  1.4585631]
 [ 1.4635521  1.4626924  1.4654584]
 [ 1.3854269  1.3830123  1.3860817]
 ...
 [-1.6865058 -1.6931561 -1.6248401]
 [-1.8686984 -2.0036569 -1.8929744]
 [-2.1770852 -2.1261556 -2.2480984]], shape=(10059, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00028819655>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003494815>]
Good Loss
tf.Tensor(
[[ 1.6104839  1.6166855  1.6152492]
 [ 1.598317   1.5939641  1.6085607]
 [ 1.5205048  1.5210335  1.5265174]
 ...
 [-1.8385903 -1.832821  -1.8290446]
 [-2.0190785 -2.0129435 -2.0179307]
 [-2.111661  -2.1022904 -2.1080463]], shape=(10048, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.0002575186>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034199748>]
Good Loss
tf.Tensor(
[[ 1.4595299  1.4638284  1.4607909]
 [ 1.4693413  1.4702327  1.4695001]
 [ 1.4502605  1.4482533  1.4547399]
 ...
 [-1.7111262 -1.7304869 -1.7093147]
 [-1.8713536 -1.8890167 -1.8602535]
 [-2.0885296 -2.0870962 -2.0787752]], shape=(10050, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00040750968>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034334563>]
Good Loss
tf.Tensor(
[[ 1.5003823  1.508376   1.5067405]
 [ 1.4981734  1.4924991  1.4902896]
 [ 1.484022   1.4836196  1.4734882]
 ...
 [-2.298027  -2.294526  -2.2965949]
 [-2.3082767 -2.3082728 -2.3064444]
 [-2.376986  -2.372083  -2.3830764]], shape=(10050, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00031941477>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00035593627>]
Good Loss
tf.Tensor(
[[ 1.4256179  1.4340307  1.4255767]
 [ 1.4215614  1.4195577  1.4180229]
 [ 1.3661157  1.3564256  1.3677175]
 ...
 [-1.5883604 -1.5726686 -1.5824623]
 [-1.3852868 -1.3763543 -1.3758177]
 [-1.4052988 -1.3892233 -1.3923103]], shape=(10049, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00026797783>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034652548>]
Good Loss
tf.Tensor(
[[ 1.5223981  1.5236394  1.5182495]
 [ 1.5259011  1.5223153  1.5268596]
 [ 1.5131749  1.5126653  1.5135201]
 ...
 [-1.6146951 -1.6060197 -1.6137809]
 [-1.        -1.        -1.       ]
 [ 1.         1.         1.       ]], shape=(10054, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00036520505>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003398374>]
Good Loss
tf.Tensor(
[[ 1.3729346   1.3707099   1.377158  ]
 [ 1.3792241   1.3751808   1.3842177 ]
 [ 1.3438058   1.3351529   1.3476838 ]
 ...
 [-0.90690696 -0.9175537  -0.92086107]
 [-1.309168   -1.3025436  -1.3050939 ]
 [-1.4521413  -1.4530528  -1.4389325 ]], shape=(10056, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.0003149632>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003550389>]
Good Loss
tf.Tensor(
[[ 1.7635822  1.7804217  1.7571009]
 [ 1.7604525  1.7293911  1.7717061]
 [ 1.6424351  1.6591587  1.6204798]
 ...
 [-1.0861986 -1.0225728 -1.1013308]
 [-1.5236483 -1.5440865 -1.4659582]
 [-1.701061  -1.6633611 -1.750599 ]], shape=(10042, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00028756008>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003520676>]
Good Loss
tf.Tensor(
[[ 1.3790873  1.3809232  1.3776851]
 [ 1.391415   1.390368   1.3930496]
 [ 1.3802367  1.3793107  1.3832551]
 ...
 [-1.371799  -1.3770962 -1.3676171]
 [-1.492158  -1.4820545 -1.4926034]
 [-1.6405324 -1.6423371 -1.6469343]], shape=(10052, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.0001543734>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00035303095>]
Good Loss
tf.Tensor(
[[1.4125186  1.4157363  1.4077516 ]
 [1.4270478  1.4275632  1.4310753 ]
 [1.4429913  1.4387677  1.4425274 ]
 ...
 [1.7337322  1.4763716  1.6981996 ]
 [0.6879919  0.67471695 0.68767154]
 [0.70772487 0.7217499  0.6022016 ]], shape=(10059, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.000452198>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00033427245>]
Good Loss
tf.Tensor(
[[ 1.419508   1.429901   1.410756 ]
 [ 1.4429132  1.4503219  1.4473108]
 [ 1.4179258  1.4283197  1.4063685]
 ...
 [-1.5585067 -1.5663439 -1.5425953]
 [-1.6821761 -1.6869249 -1.6890068]
 [-1.6698263 -1.6540645 -1.6792034]], shape=(10055, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00033219287>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003434156>]
Good Loss
tf.Tensor(
[[ 1.604863   1.6035035  1.6011682]
 [ 1.6209182  1.6220211  1.6225023]
 [ 1.5863845  1.5891055  1.5919025]
 ...
 [-1.9214762 -1.9065176 -1.9352255]
 [-1.9016846 -1.8867089 -1.8863683]
 [-1.7245889 -1.7264537 -1.7287418]], shape=(10058, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.0004119057>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034893228>]
Good Loss
tf.Tensor(
[[ 1.536388   1.5340929  1.5443581]
 [ 1.543219   1.5458907  1.547598 ]
 [ 1.494044   1.5032611  1.495965 ]
 ...
 [-1.729198  -1.7292321 -1.7198229]
 [-1.867982  -1.874444  -1.8657813]
 [-1.7893181 -1.7800059 -1.7941939]], shape=(10052, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.0003526955>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003451832>]
Good Loss
tf.Tensor(
[[ 1.5370678   1.5334193   1.5413175 ]
 [ 1.5537492   1.5509379   1.5424156 ]
 [ 1.5299171   1.5329845   1.5231516 ]
 ...
 [-1.5160092  -1.5552778  -1.5225459 ]
 [-1.2981843  -1.3011949  -1.3081967 ]
 [-0.91595143 -0.93555844 -0.89216757]], shape=(10057, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00028138736>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034614303>]
Good Loss
tf.Tensor(
[[ 1.4504299  1.4508629  1.4471853]
 [ 1.4657346  1.4687638  1.4593805]
 [ 1.4437389  1.4457673  1.4413682]
 ...
 [-1.1890761 -1.1585615 -1.1955568]
 [-1.3516469 -1.3832033 -1.3530127]
 [-1.4300507 -1.4055152 -1.4479014]], shape=(10047, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00023444617>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00033904423>]
Good Loss
tf.Tensor(
[[ 1.4852064  1.480633   1.4835825]
 [ 1.5023742  1.5031786  1.499554 ]
 [ 1.4830078  1.487724   1.4856277]
 ...
 [-1.4442106 -1.483833  -1.443857 ]
 [-1.7963617 -1.7605861 -1.7538112]
 [-2.400337  -2.3607745 -2.4225864]], shape=(10053, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.000445101>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003456732>]
Good Loss
tf.Tensor(
[[ 1.3825283   1.3652158   1.3920473 ]
 [ 1.3964832   1.3969475   1.4059958 ]
 [ 1.4290375   1.4254999   1.4082383 ]
 ...
 [-0.34419826 -0.39508295 -0.34719405]
 [-1.0203601  -1.0141991  -1.1196389 ]
 [-1.6318583  -1.7002733  -1.5576088 ]], shape=(10056, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00040956077>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00036670573>]
Good Loss
tf.Tensor(
[[ 1.3062717  1.3113024  1.3195709]
 [ 1.3178632  1.3310404  1.2860307]
 [ 1.2327008  1.2237352  1.2518348]
 ...
 [-1.6165093 -1.6097357 -1.6101545]
 [-1.6643541 -1.6575668 -1.6617059]
 [-1.6960417 -1.696617  -1.6953839]], shape=(10054, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00026927737>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00035079094>]
Good Loss
tf.Tensor(
[[ 1.4255996   1.4308153   1.4243016 ]
 [ 1.4433745   1.4454273   1.4461092 ]
 [ 1.5022569   1.5064049   1.5050472 ]
 ...
 [-0.441922   -0.2608872  -0.32476628]
 [ 0.528776    0.7257394   0.58303005]
 [ 0.87525266  1.0779016   0.58720547]], shape=(10052, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.0003429208>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034592362>]
Good Loss
tf.Tensor(
[[ 1.3473539   1.346177    1.3362169 ]
 [ 1.3709625   1.3722694   1.3701444 ]
 [ 1.3198458   1.3061435   1.3027786 ]
 ...
 [ 0.1605535   0.22155182  0.21588232]
 [-1.6489123  -1.7922672  -1.60159   ]
 [-1.7943853  -1.7946424  -1.7596394 ]], shape=(10053, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00043400313>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003522619>]
Good Loss
tf.Tensor(
[[ 1.3503681  1.3553325  1.3476509]
 [ 1.3701245  1.3698756  1.3654948]
 [ 1.3530053  1.3507707  1.3570336]
 ...
 [-1.9312215 -1.9364501 -1.9681025]
 [-2.2719524 -2.2744384 -2.3080177]
 [-2.4680796 -2.4370692 -2.4582794]], shape=(10037, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00029744903>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00034877262>]
Good Loss
tf.Tensor(
[[ 1.373491   1.3700029  1.3763803]
 [ 1.3885043  1.38542    1.3927517]
 [ 1.3582704  1.3605309  1.3440381]
 ...
 [-1.7135127 -1.7186606 -1.7141457]
 [-1.        -1.        -1.       ]
 [ 1.         1.         1.       ]], shape=(10051, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.0003829565>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.0003553107>]
Good Loss
tf.Tensor(
[[ 1.4489478  1.4522487  1.4527637]
 [ 1.4677094  1.4644512  1.4575071]
 [ 1.4520229  1.452748   1.4547497]
 ...
 [-1.2115713 -1.1779772 -1.1503384]
 [-1.8801659 -1.7994295 -1.8426954]
 [-1.883105  -1.8642514 -1.8738446]], shape=(10053, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00039187408>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00035179697>]
Good Loss
tf.Tensor(
[[ 1.4664252   1.471059    1.4643918 ]
 [ 1.4932265   1.4987991   1.4909238 ]
 [ 1.4540002   1.4595896   1.459036  ]
 ...
 [-1.0264184  -0.90676934 -1.1722596 ]
 [-0.2952131  -0.59720093 -0.3286579 ]
 [-0.10643527  0.04804019 -0.01013407]], shape=(10048, 3), dtype=float32)
[<tf.Tensor: shape=(), dtype=float32, numpy=-0.00038563204>, <tf.Tensor: shape=(), dtype=float32, numpy=-0.00035216217>]
Good Loss
pygame 2.2.0 (SDL 2.0.22, Python 3.11.0)
Hello from the pygame community. https://www.pygame.org/contribute.html
pygame 2.2.0 (SDL 2.0.22, Python 3.11.0)
Hello from the pygame community. https://www.pygame.org/contribute.html
pygame 2.2.0 (SDL 2.0.22, Python 3.11.0)
Hello from the pygame community. https://www.pygame.org/contribute.html
pygame 2.2.0 (SDL 2.0.22, Python 3.11.0)
Hello from the pygame community. https://www.pygame.org/contribute.html
pygame 2.2.0 (SDL 2.0.22, Python 3.11.0)
Hello from the pygame community. https://www.pygame.org/contribute.html
pygame 2.2.0 (SDL 2.0.22, Python 3.11.0)
Hello from the pygame community. https://www.pygame.org/contribute.html
pygame 2.2.0 (SDL 2.0.22, Python 3.11.0)
Hello from the pygame community. https://www.pygame.org/contribute.html
2
pygame 2.2.0 (SDL 2.0.22, Python 3.11.0)
Hello from the pygame community. https://www.pygame.org/contribute.html
pygame 2.2.0 (SDL 2.0.22, Python 3.11.0)
Hello from the pygame community. https://www.pygame.org/contribute.html
